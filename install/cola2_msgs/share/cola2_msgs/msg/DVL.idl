// generated from rosidl_adapter/resource/msg.idl.em
// with input from cola2_msgs/msg/DVL.msg
// generated code does not contain a copyright notice

#include "cola2_msgs/msg/DVLBeam.idl"
#include "geometry_msgs/msg/Vector3.idl"
#include "std_msgs/msg/Header.idl"

module cola2_msgs {
  module msg {
    typedef double double__9[9];
    @verbatim (language="comment", text=
      "Extracted from UUV Simulator:" "\n"
      "  https://github.com/uuvsimulator/uuv_simulator")
    struct DVL {
      @verbatim (language="comment", text=
        "This is a message to hold data from a DVL sensor (Doppler Velocity Log)." "\n"
        "" "\n"
        "Distances are in [m], velocities in [m/s]" "\n"
        "" "\n"
        "If the covariance is known, it should be filled." "\n"
        "If it is unknown, it should be set to all zeros." "\n"
        "If a measurement was invalid, its covariance should be set to -1 so it can be" "\n"
        "disregarded." "\n"
        "" "\n"
        "DVLBeams are optional. If they are set they contain individual ranges and 1D" "\n"
        "doppler velocity estimates orthogonal to the ray.")
      std_msgs::msg::Header header;

      @verbatim (language="comment", text=
        "Measured velocity")
      @unit (value="m/s")
      geometry_msgs::msg::Vector3 velocity;

      @verbatim (language="comment", text=
        "Row major, xyz axes")
      double__9 velocity_covariance;

      @verbatim (language="comment", text=
        "Altitude of the vehicle")
      double altitude;

      sequence<cola2_msgs::msg::DVLBeam> beams;
    };
  };
};
